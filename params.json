{"name":"Bigv-python","tagline":"A Module for BigV which wraps the BigV CLI","body":"# Python module for BigV\r\n\r\nThis is an initial attempt at a Python module for BigV, with the eventual idea\r\nthat this will be incorporated into an Ansible module.\r\n\r\n*Note* This is a wrapper around the BigV [command-line tool][1], rather than a\r\ntool which consumes the REST API. The REST API is documented [here][2] (and its\r\ndocs are on Github [here][3]).\r\n\r\n## TODO\r\n\r\n* Testing\r\n* Packaging\r\n* Everything else\r\n\r\n## Examples\r\n\r\n    import bigv\r\n  \r\n    act = bigv.BigVAccount(username=\"alice\",password=\"testing\",account=\"mystuff\")\r\n    for m in act.machines():\r\n      print \"Machine has %d discs\" % len(list(m.discs()))\r\n      print m.info()\r\n\r\n## Usage with Ansible\r\n\r\nThis repository now contains (possibly buggy) implementations of two Ansible\r\nmodules, `bigv-disc` and `bigv-vm` which are capable of creating new machines\r\nand discs. Both modules are idempotent, but note that they will only ever\r\n*create* and *delete* discs and VMs, and will never *edit* them.\r\n\r\nSpec changes will need to be done manually.\r\n\r\nA sample [playbook](sample-playbook.yml) is provided which shows basic usage of\r\nthe two modules.\r\n\r\n[1]: http://www.bigv.io/download\r\n[2]: http://bigv-api-docs.ichilton.co.uk/api/\r\n[3]: https://github.com/ichilton/bytemark-bigv-api-doc\r\n\r\n<!--- vim:textwidth=80 \r\n--->\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}